//@name Mootools StaticsMaps Plugin. @copyright Copyright 2010 Noritaka Horio All rights reserved. @license: The MIT License.
(function(b){var a=this.StaticMaps=new Class({Implements:[Options],options:{},_url:"http://maps.google.com/maps/api/staticmap",sensor:false,initialize:function(c){this.setOptions(c);this._setDefaultValues()},setSensor:function(c){if(typeOf(c)!="boolean"){throw new TypeError("The data type is not boolean")}this.sensor=c},getSensor:function(){return this.sensor},_getImage:function(){var c=new Element("img",{src:this.toQueryString()});if(a.Map!=undefined){var d=this.getSize();c.setProperties(this.getSize())}return c},renderTo:function(d){var c=this._getImage();c.inject(d)},_setDefaultValues:function(){var e=null,f=null;var d=a.Hooks.getDefaults();for(var c in d){if(d.hasOwnProperty(c)){e=this.options[c];f=d[c].bind(this);f(e)}}},toQueryString:function(){var h=[];var i=a.Hooks.getQueries();for(var e in i){if(i.hasOwnProperty(e)){var g=this[e];var f=i[e];var c=f(g);if(c!=""){h.push(c)}}}var d=this._url+"?"+h.join("&");d=d+"&sensor="+this.getSensor();return d},factory:function(e,d){var c=e.capitalize();if(a[c]==null||a[c]=="undefind"){throw new TypeError("The class that was able to make it to the instance was not found")}return a[c].factory(d)}});a.Hooks={defaults:{},queries:{},getDefaults:function(){return this.defaults},getQueries:function(){return this.queries},registerDefaults:function(c,d){if(typeOf(d)!="function"){return}this.defaults[c]=d},registerQuery:function(c,d){if(typeOf(d)!="function"){return}this.queries[c]=d}}}(document.id));(function(b){var a=(this.StaticMaps||{});a.implement({options:{map:{size:{width:600,height:600},format:null,maptype:null,mobile:null,language:null}},map:{size:null,format:null,maptype:null,mobile:null,language:null},setSize:function(e,c){if(typeOf(e)!="number"||typeOf(c)!="number"){throw new TypeError("The data type of the size is not a numerical value")}if(e<=0||c<=0){throw new TypeError("Please make the size the size of 0 or more")}var d={width:e,height:c};this.map.size=d;return this},setFormat:function(c){if(a.Map.formats.indexOf(c)<=-1){throw new TypeError("Png, jpg, and gif, etc. can be specified for an image format")}this.map.format=c;return this},setMapType:function(c){if(a.Map.maptypes.indexOf(c)<=-1){throw new TypeError("Please specify either roadmap, satellite, terrain or hybrid for a type in the map")}this.map.maptype=c;return this},setMobile:function(c){if(typeOf(c)!="boolean"){throw new TypeError("The data type is not boolean")}this.map.mobile=c;return this},setLanguage:function(c){if(a.Map.languages.indexOf(c)<=-1){throw new TypeError("The specified language doesn't correspond")}this.map.language=c;return this},getSize:function(){return this.map.size},getFormat:function(c){return this.map.format},getMapType:function(c){return this.map.maptype},getMobile:function(c){return this.map.mobile},getLanguage:function(c){return this.map.language}});a.Map={};a.Map.formats=["png","png8","png32","gif","jpg","jpg-baseline"];a.Map.maptypes=["roadmap","satellite","terrain","hybrid"];a.Map.languages=["aa","ab","af","am","ar","as","ay","az","ba","be","bg","bh","bi","bn","bo","br","ca","co","cs","cy","da","de","dz","el","en","eo","es","et","eu","fa","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","ha","hi","hr","hu","hy","ia","ie","ik","in","is","it","iw","ja","ji","jw","ka","kk","kl","km","kn","ko","ks","ku","ky","la","ln","lo","lt","lv","mg","mi","mk","ml","mn","mo","mr","ms","mt","my","na","ne","nl","no","oc","om","or","pa","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sd","sg","sh","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","uk","ur","uz","vi","vo","wo","xh","yo","zh","zu"];a.Map.setDefaults=function(d){var f=null,e=null;for(var c in d){f=c.capitalize();e=d[c];if(e===null||e===undefined){continue}if(d.hasOwnProperty(c)){switch(c){case"size":this.setSize(e.width,e.height);break;case"maptype":this.setMapType(e);break;default:this["set"+f](e);break}}}};a.Hooks.registerDefaults("map",a.Map.setDefaults);a.Map.toQueryString=function(f){var e=[],d=null;for(var c in f){if(f.hasOwnProperty(c)){d=f[c];if(d==null&&d==undefined){continue}switch(c){case"size":e.push(c+"="+d.width+"x"+d.height);break;default:e.push(c+"="+d)}}}return e.join("&")};a.Hooks.registerQuery("map",a.Map.toQueryString)}(document.id));(function(b){var a=(this.StaticMaps||{});a.implement({options:{position:{center:null,zoom:null}},position:{center:null,zoom:null},setCenter:function(c){switch(typeOf(c)){case"object":if(typeOf(c.lat)!="number"&&typeOf(c.lng)!="number"){throw new TypeError("The latitude longitude is not a numerical value")}break;case"string":if(c.length<=0){throw new TypeError("The name of a place is uncertain")}break;default:throw new TypeError("The data type at the position is a character string or not an object")}this.position.center=c;return this},setZoom:function(c){if(typeOf(c)!="number"){throw new TypeError("")}if(c<0||c>21){throw new TypeError("")}this.position.zoom=c},getCenter:function(){return this.position.center},getZoom:function(c){return this.position.zoom}});a.Position={};a.Position.setDefaults=function(d){var f=null,e=null;for(var c in d){if(d.hasOwnProperty(c)){f=c.capitalize();e=d[c];if(e===null||e===undefined){continue}if(d.hasOwnProperty(c)){this["set"+f](e)}}}};a.Hooks.registerDefaults("position",a.Position.setDefaults);a.Position.toQueryString=function(d){var e=[];var c=d.center;if(c){switch(typeOf(c)){case"string":e.push("center="+encodeURIComponent(c));break;case"object":e.push("center="+c.lat+","+c.lng);break}}if(d.zoom){e.push("zoom="+d.zoom)}return e.join("&")};a.Hooks.registerQuery("position",a.Position.toQueryString)}(document.id));(function(b){var a=(this.StaticMaps||{});a.implement({options:{markers:[]},markers:[],addMarker:function(c){if(!instanceOf(c,a.Marker)){c=new a.Marker(c)}this["markers"].push(c)},removeMarker:function(c){var d=c;if(typeOf(c)=="number"){if(this["markers"][c]){d=this["markers"][c]}}this["markers"].erase(d)}});a.Marker=new Class({props:{color:null,size:null,label:null,icon:null,shadow:true,point:null},initialize:function(d){var c=d=(d||{});this.setProperties(c)},setProperties:function(d){var f=null,e=null;for(var c in d){if(d.hasOwnProperty(c)){f=c.capitalize();e=d[c];this["set"+f](e)}}},setColor:function(c){if(typeOf(c)!="string"){throw new TypeError("The color is not a character string")}if(a.Marker.colors.indexOf(c)<=-1&&!c.test(/^0x[A-Z0-9]{6}$/)){throw new TypeError("They are not curlers such as 24 bit color or black, brown, and green")}this.props.color=c;return this},setLabel:function(c){if(typeOf(c)!="string"){throw new TypeError("The label is not a character string")}if(!c.test(/^[A-Z0-9]{1}$/)){throw new TypeError("It is not one character in the set of {A-Z, 0-9}")}this.props.label=c;return this},setSize:function(c){if(typeOf(c)!="string"){throw new TypeError("The size is not a character string")}if(a.Marker.sizes.indexOf(c)<=-1){throw new TypeError("The sizes are not either tiny, mid or small")}this.props.size=c;return this},setPoint:function(c){switch(typeOf(c)){case"object":if(typeOf(c.lat)!="number"&&typeOf(c.lng)!="number"){throw new TypeError("The latitude longitude is not a numerical value")}break;case"string":if(c.length<=0){throw new TypeError("The name of a place is uncertain")}break;default:throw new TypeError("The data type at the position is a character string or not an object")}this.props.point=c;return this},setIcon:function(c){if(typeOf(c)!="string"){throw new TypeError("The url is not a character string")}if(!c.test(/^(((ht|f)tp(s?))\:\/\/)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/)){throw new TypeError("It is not a format of url")}this.props.icon=c;return this},setShadow:function(c){if(typeOf(c)!="boolean"){throw new TypeError("The data type is not boolean")}this.props.shadow=c;return this},getProperties:function(c){return this.props},getColor:function(c){return this.props.color},getLabel:function(c){return this.props.label},getSize:function(c){return this.props.size},getPoint:function(c){return this.props.point},getIcon:function(){return this.props.icon},getShadow:function(){return this.props.shadow},toObject:function(){var c={};for(var d in this.props){if(this.props.hasOwnProperty(d)){value=this.props[d];if(value==null&&value==undefined){continue}c[d]=value}}return c},toQueryString:function(){var f=[];var d=a.Marker.orderKeys;var c=a.Marker.orderKeys.length;for(var e=0;e<c;e++){key=d[e];value=this.props[key];if(value==null&&value==undefined){continue}switch(key){case"point":if(typeOf(value)=="string"){f.push(encodeURIComponent(value))}else{f.push(value.lat+","+value.lng)}break;default:f.push(key+":"+value);break}}return f.join("|")}});a.Marker.sizes=["tiny","mid","small"];a.Marker.colors=["black","brown","green","purple","yellow","blue","gray","orange","red","white"];a.Marker.orderKeys=["color","size","label","icon","shadow","point"];a.Marker.setDefaults=function(f){var d=null,c=f.length;for(var e=0;c>e;e++){this.addMarker(f[e])}};a.Hooks.registerDefaults("markers",a.Marker.setDefaults);a.Marker.factory=function(f){var e=Object.subset(f||{},["color","size","label","icon","shadow","point"]);for(var d in e){if(e.hasOwnProperty(d)){if(e[d]==undefined){delete e[d]}}}var c=new a.Marker(e);return c};a.Marker.toQueryString=function(h){var g=[],e=[];if(h.length<=0){return""}var f=Array.clone(h);var c=f.shift();e.push(c.toQueryString());for(var d=0;d<f.length;d++){c=f[d];if(c.getColor()||c.getLabel()||c.getSize()){g.push("markers="+e.join("|"));e=[]}e.push(c.toQueryString())}g.push("markers="+e.join("|"));return g.join("&")};a.Hooks.registerQuery("markers",a.Marker.toQueryString)}(document.id));